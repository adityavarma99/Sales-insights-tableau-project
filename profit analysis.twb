<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0misylj0utf8ou139mqxw0v1rm53'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='customers' table='[customers]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='date' table='[date]' type='table' />
          <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='products' table='[products]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_E334BFFD87264790BA10F32F9503B141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_6880A0BDA3C84535B3F9D39F282D5658]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_6880A0BDA3C84535B3F9D39F282D5658]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_6880A0BDA3C84535B3F9D39F282D5658]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_E9F3E95B95B344899B5C99E11FBD4A23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_E9F3E95B95B344899B5C99E11FBD4A23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_E9F3E95B95B344899B5C99E11FBD4A23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_E9F3E95B95B344899B5C99E11FBD4A23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_E9F3E95B95B344899B5C99E11FBD4A23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_B4DEC5E913594AA98CFF83C543857E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_B4DEC5E913594AA98CFF83C543857E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_B4DEC5E913594AA98CFF83C543857E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_51A0108F81F74F8D8063B2A086C1DC2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_51A0108F81F74F8D8063B2A086C1DC2B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]&quot;' value='profit' />
        </aliases>
      </column>
      <column caption='profit margin percentage' datatype='real' name='[Calculation_1100285703929348096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_1107604053059743744])' />
      </column>
      <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_6880A0BDA3C84535B3F9D39F282D5658]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_E9F3E95B95B344899B5C99E11FBD4A23]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_B4DEC5E913594AA98CFF83C543857E1C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_51A0108F81F74F8D8063B2A086C1DC2B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_E334BFFD87264790BA10F32F9503B141]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[pcto:sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
      <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1100285703929348096]' derivation='User' name='[usr:Calculation_1100285703929348096:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Type)' hidden='true' name='[Action (Customer Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[customer_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Code (Products))' hidden='true' name='[Action (Product Code (Products))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code (products)]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Cy Date))' hidden='true' name='[Action (QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[pcto:sum:Calculation_1107604053059743744:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_1107604053059743744' />
      </field-sort-info>
      <filter class='categorical' column='[market_code]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[market_code]' />
          <groupfilter function='member' level='[market_code]' member='%null%' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='customers' id='customers_6880A0BDA3C84535B3F9D39F282D5658'>
            <properties context=''>
              <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_E9F3E95B95B344899B5C99E11FBD4A23'>
            <properties context=''>
              <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_B4DEC5E913594AA98CFF83C543857E1C'>
            <properties context=''>
              <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_51A0108F81F74F8D8063B2A086C1DC2B'>
            <properties context=''>
              <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_E334BFFD87264790BA10F32F9503B141'>
            <properties context=''>
              <relation connection='mysql.0misylj0utf8ou139mqxw0v1rm53' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_E334BFFD87264790BA10F32F9503B141' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customers_6880A0BDA3C84535B3F9D39F282D5658' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_E334BFFD87264790BA10F32F9503B141' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='date_E9F3E95B95B344899B5C99E11FBD4A23' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_E334BFFD87264790BA10F32F9503B141' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='markets_B4DEC5E913594AA98CFF83C543857E1C' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_E334BFFD87264790BA10F32F9503B141' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='products_51A0108F81F74F8D8063B2A086C1DC2B' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 2 (generated) 1' name='[Action10_65681BD9BCEB444B9D4B01E96085BD97]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated) 1' name='[Action11_49C8B0855A934F798A6F0E75F2B876C3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated) 1' name='[Action13_42BE73D91755473686E2C7DEC05B4B7C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated) 1' name='[Action14_7A3926FEA64040DE9C244583EEE925B7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='Revenue by markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action14_E6C9FF7D29F34E779114868A4B27C54D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='pie chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action15_02F4A9142E4342BB9B40F9EC2EB71F0E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='customer table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action16_7D25C91D2F4F4E2A9CEBD16179483000]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='Profit margin by market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action17_DACAF7C47DB041E7AACEEA9C34D3E33B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2 profit analysis' type='sheet' worksheet='profit trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2 profit analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_FCCEC6BBB1EE4275B34EA40BD145E1E8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_4300412FE99447638164666602BBDD62]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales quantity by market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_050CC1CA75AB4DC9BD212DB6E46EC404]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='top 5 products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_CCF9EC9EB98941CBA23578942CF7564B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='top 5 customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_0F1DB2812BB44AEE940EC2F77A8F71DB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1107604053089902594]' derivation='None' name='[none:Calculation_1107604053089902594:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]' value='#606b76' />
            <format attr='font-size' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]' value='10' />
            <format attr='font-weight' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok]' value='#606b76' />
            <format attr='font-size' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok]' value='10' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-weight' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:Calculation_1107604053089902594:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{9BF34C67-FD53-4243-B8FC-B2716DADE8AE}' />
    </worksheet>
    <worksheet name='Profit margin by market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='profit margin percentage' datatype='real' name='[Calculation_1100285703929348096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_1107604053059743744])' />
            </column>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1100285703929348096]' derivation='User' name='[usr:Calculation_1100285703929348096:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_4300412FE99447638164666602BBDD62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]' value='104' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]</cols>
      </table>
      <simple-id uuid='{95A5F7B1-FDE2-49E9-ABD4-BD7A573ED08D}' />
    </worksheet>
    <worksheet name='Quantity'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='243' />
            <format attr='height' value='82' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' value='c#,##0.00' />
            <format attr='color' value='#000000' />
            <format attr='font-size' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' value='10' />
            <format attr='color' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' value='#333333' />
            <format attr='font-weight' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run fontsize='18'><![CDATA[<[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F5F6F71A-3A98-44B7-8EF5-7976BAF79A94}' />
    </worksheet>
    <worksheet name='Revenue by markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_4300412FE99447638164666602BBDD62]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]' value='104' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]</cols>
      </table>
      <simple-id uuid='{441BA881-E95C-4957-9B9F-5C9EF9C6CD0D}' />
    </worksheet>
    <worksheet name='Revenue by year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue By Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1107604053089902594]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' palette='red_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]</rows>
        <cols>([federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok] / [federated.1crf2yx1cuj7va1fm5e8e12auxep].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{EA8AE4D1-E8CA-480C-A890-31D6FF229563}' />
    </worksheet>
    <worksheet name='Sales quantity by market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' value='c#,##0,.00K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{E2E43240-3ED6-46FB-ABB3-29C01D923424}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1107604053089902594]' derivation='None' name='[none:Calculation_1107604053089902594:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f1ce63' />
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]' value='#79706e' />
            <format attr='font-size' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]' value='10' />
            <format attr='font-weight' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:Calculation_1107604053089902594:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{14C3BA3E-75B7-4DB4-980E-F7CA64A96258}' />
    </worksheet>
    <worksheet name='customer table'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='profit margin percentage' datatype='real' name='[Calculation_1100285703929348096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_1107604053059743744])' />
            </column>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1100285703929348096]' derivation='User' name='[usr:Calculation_1100285703929348096:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_65681BD9BCEB444B9D4B01E96085BD97]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_49C8B0855A934F798A6F0E75F2B876C3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1E4A1A99-7861-454D-9EAB-0A0DE4CAF336}' />
    </worksheet>
    <worksheet name='pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[pcto:sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_65681BD9BCEB444B9D4B01E96085BD97]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_49C8B0855A934F798A6F0E75F2B876C3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='240' />
            <format attr='cell-h' value='240' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]' />
              <wedge-size column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
              <size column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]' />
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[pcto:sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'><![CDATA[<[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'><![CDATA[<[federated.1crf2yx1cuj7va1fm5e8e12auxep].[pcto:sum:Calculation_1107604053059743744:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{31D738B4-9AC7-4FCA-94C4-9E1FFB69154F}' />
    </worksheet>
    <worksheet name='profit'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_65681BD9BCEB444B9D4B01E96085BD97]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_49C8B0855A934F798A6F0E75F2B876C3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]' value='c#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:profit_margin:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3921A8B3-0494-4E3A-9BC5-5AF863755C8F}' />
    </worksheet>
    <worksheet name='profit trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='profit margin percentage' datatype='real' name='[Calculation_1100285703929348096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/sum([Calculation_1107604053059743744])' />
            </column>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1100285703929348096]' derivation='User' name='[usr:Calculation_1100285703929348096:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_65681BD9BCEB444B9D4B01E96085BD97]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_49C8B0855A934F798A6F0E75F2B876C3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]' />
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]' />
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk] + [federated.1crf2yx1cuj7va1fm5e8e12auxep].[usr:Calculation_1100285703929348096:qk])</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[tqr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{CDE51AA0-802F-4898-94F0-9C2EBF34341E}' />
    </worksheet>
    <worksheet name='revenue'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action14_E6C9FF7D29F34E779114868A4B27C54D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='c#,##0,,.00M' />
            <format attr='font-size' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='18'><![CDATA[<[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B8F53652-0128-47BE-970B-717A48B97B00}' />
    </worksheet>
    <worksheet name='top 5 customers'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1107604053089902594]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]' context='true'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action7_5C2CA2A409244358B8E2B05F7D634BD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1107604053059743744])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Product Code (Products))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#f5f5f5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]</cols>
      </table>
      <simple-id uuid='{85B927F4-F160-430F-98C8-F25812A46CDC}' />
    </worksheet>
    <worksheet name='top 5 products'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1crf2yx1cuj7va1fm5e8e12auxep' />
          </datasources>
          <datasource-dependencies datasource='federated.1crf2yx1cuj7va1fm5e8e12auxep'>
            <column caption='Normalized amount' datatype='real' name='[Calculation_1107604053059743744]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; then [sales_amount]*64 else [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1107604053089902594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1107604053059743744]' derivation='Sum' name='[sum:Calculation_1107604053059743744:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_3DB6DB2199A046819A5C18B38D9FB2DF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1107604053089902594]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7EEC19DC0DFB406EB79F8689BA5A330A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1107604053089902594]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action8_CCF9EC9EB98941CBA23578942CF7564B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4_6C0DDF413C6F4861AE7CC06D2F4CD804]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1107604053059743744])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Markets Name)]</column>
            <column>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='13' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' value='c#,##0,,.00M' />
            <format attr='height' field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]' value='44' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]</rows>
        <cols>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]</cols>
      </table>
      <simple-id uuid='{700C13F6-3181-4894-8B49-831224C60192}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='10333' id='3' name='Year' w='18533' x='40800' y='1333' />
        <zone h='9444' id='4' name='Month' w='48467' x='25067' y='7667' />
        <zone h='60778' id='5' name='Revenue by markets' w='29200' x='1933' y='29556' />
        <zone h='14333' id='6' name='revenue' w='15400' x='8867' y='15778' />
        <zone h='59889' id='7' name='Sales quantity by market' w='26133' x='33200' y='30111' />
        <zone h='11444' id='8' name='Quantity' w='23200' x='31267' y='16222' />
        <zone h='39667' id='9' name='Revenue by year' w='39000' x='59800' y='15778' />
        <zone h='27333' id='10' name='top 5 customers' w='19800' x='59000' y='62000' />
        <zone h='30333' id='11' name='top 5 products' w='20067' x='79000' y='60222' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='26' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='93' h='10333' id='3' is-fixed='true' name='Year' w='18533' x='40800' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='9444' id='4' is-fixed='true' name='Month' w='48467' x='25067' y='7667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='14333' id='6' is-fixed='true' name='revenue' w='15400' x='8867' y='15778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39667' id='9' is-fixed='true' name='Revenue by year' w='39000' x='59800' y='15778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='103' h='11444' id='8' is-fixed='true' name='Quantity' w='23200' x='31267' y='16222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60778' id='5' is-fixed='true' name='Revenue by markets' w='29200' x='1933' y='29556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59889' id='7' is-fixed='true' name='Sales quantity by market' w='26133' x='33200' y='30111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='30333' id='11' is-fixed='true' name='top 5 products' w='20067' x='79000' y='60222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='27333' id='10' is-fixed='true' name='top 5 customers' w='19800' x='59000' y='62000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{17944A39-1CEF-45C8-8E15-9BF0DFA96D33}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2 profit analysis'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='10333' id='3' name='Year' w='18533' x='40800' y='1333' />
        <zone h='9444' id='4' name='Month' w='48467' x='25067' y='7667' />
        <zone h='60778' id='5' name='Revenue by markets' w='26867' x='1933' y='29556' />
        <zone h='14333' id='6' name='revenue' w='15400' x='8867' y='15778' />
        <zone h='11000' id='18' name='profit' w='10600' x='38533' y='17222' />
        <zone h='62000' id='19' name='Profit margin by market' w='24733' x='29800' y='29556' />
        <zone h='39000' id='20' name='profit trend' show-title='false' w='40000' x='56800' y='13222' />
        <zone h='39556' id='21' name='customer table' w='24133' x='54600' y='53111' />
        <zone h='32222' id='22' name='pie chart' show-title='false' w='16200' x='82467' y='58889' />
        <zone h='7111' id='23' name='pie chart' pane-specification-id='0' param='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]' type-v2='color' w='9333' x='83533' y='53333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='26' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='93' h='10333' id='3' is-fixed='true' name='Year' w='18533' x='40800' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='9444' id='4' is-fixed='true' name='Month' w='48467' x='25067' y='7667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39000' id='20' is-fixed='true' name='profit trend' show-title='false' w='40000' x='56800' y='13222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='14333' id='6' is-fixed='true' name='revenue' w='15400' x='8867' y='15778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='11000' id='18' is-fixed='true' name='profit' w='10600' x='38533' y='17222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60778' id='5' is-fixed='true' name='Revenue by markets' w='26867' x='1933' y='29556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62000' id='19' is-fixed='true' name='Profit margin by market' w='24733' x='29800' y='29556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39556' id='21' is-fixed='true' name='customer table' w='24133' x='54600' y='53111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32222' id='22' is-fixed='true' name='pie chart' show-title='false' w='16200' x='82467' y='58889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7111' id='23' name='pie chart' pane-specification-id='0' param='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]' type-v2='color' w='9333' x='83533' y='53333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D2381656-2A87-4819-B307-ED51E93BA21F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{621879F6-9058-4B35-90BA-9002213DFDE5}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3398654D-7D62-40D4-9107-D484BEB714FB}' />
    </window>
    <window class='worksheet' name='Revenue by markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2118EC8-5197-4EBC-BD9C-C45B09364D77}' />
    </window>
    <window class='worksheet' name='Profit margin by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D439578-34EC-461B-B047-E06F1E12EA1F}' />
    </window>
    <window class='worksheet' name='Sales quantity by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{637895EA-4148-4335-BC6A-E554D6F26AD3}' />
    </window>
    <window class='worksheet' name='top 5 customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EC5AF7D-E899-46A7-B2AE-18E6843CDC95}' />
    </window>
    <window class='worksheet' name='top 5 products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DCCC8E4-BC30-47DC-BCD8-3BD1978E12C8}' />
    </window>
    <window class='worksheet' name='Revenue by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:year:qk]</field>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B944F9A-E381-4313-9447-B8011289AEEF}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:Calculation_1107604053089902594:nk]</field>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{703B8B15-8426-4E52-9ACA-BD9EA0180376}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:Calculation_1107604053089902594:nk]</field>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27A2410A-D987-473A-9E93-84B9044062BF}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue by markets' />
        <viewpoint name='Revenue by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales quantity by market' />
        <viewpoint name='Year' />
        <viewpoint name='revenue' />
        <viewpoint name='top 5 customers' />
        <viewpoint name='top 5 products' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0E99199E-07FA-4FD9-92AE-F2A8439C6F2F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2 profit analysis'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Profit margin by market' />
        <viewpoint name='Revenue by markets' />
        <viewpoint name='Year' />
        <viewpoint name='customer table' />
        <viewpoint name='pie chart'>
          <highlight field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='profit' />
        <viewpoint name='profit trend'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='revenue' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6F1C622D-7A18-4FA0-8596-EBEA0EDFE789}' />
    </window>
    <window class='worksheet' name='profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{16371C3E-466A-481F-9518-84FEA34BE5F7}' />
    </window>
    <window class='worksheet' name='profit trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:market_code:nk]</field>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A96F7B36-FDBC-473E-A35C-443CF6422CCC}' />
    </window>
    <window class='worksheet' name='customer table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8D2026E-45DF-41A0-A2A9-040404EF53AD}' />
    </window>
    <window class='worksheet' name='pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1crf2yx1cuj7va1fm5e8e12auxep].[sum:Calculation_1107604053059743744:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:custmer_name:nk]</field>
            <field>[federated.1crf2yx1cuj7va1fm5e8e12auxep].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E561B020-C310-4AC5-A227-2476F187CA0C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2 profit analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit margin by market' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='86' name='Quantity' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABWCAYAAACZ45lZAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAYmklEQVR4nO2de1RU5d7HP+c9DO+Ll1krMcEySRRvmKaMpqbiXYEMjSNGcwzTCNIwyVvo
      QUKPkpcym7wQupBsQuygoge8JXFRNMWjclBTCQWvmGBnVOgw0+r9Y/YMA8wMMzAiNvuzFmvN
      Zmbv5/nt/fye5/dc9vP90++///47IiJ2yv887gyIiDxORAcQsWtEBxCxa0QHELFrRAcQsWtE
      BxCxa0QHELFrRAcQsWtEBxCxa0QHELFrRAcQsWtEBxCxa0QHELFrRAcQsWtEBxCxa0QHELFr
      RAcQsWvs1wGKE5HLZMhkMmTR2Y87NyKPCYfHk2wVdwoOsHPrLtLzL3OzvFL7b0lrXJ7uRI8R
      3owf48OwXu1wfDwZfLLQlPPjvh1s3pVO/uWb6G6nU5tn8Ojty6S3A/Hp3uZxPezHR3Y0sg/S
      AOgWnoIy2K3OT5r8nmjKc1HMWojycmXdL9X3Kb2ZT6kyn0ylAknrHryzaRtvdWvqXD4paCjP
      VTBroRJjt7Oy/Cb5mZvJz9zMKg85K9eHM7iN3bmBWZo2BFJlsyxotvHCbwT1/QtcLX3EeXpi
      0XArfRFBs40X/tpUXlYyOyiClCLNo8/aE0QTVgcaTsUtJ61MOHTyIGDBYqZ6d6WDVBvoaCru
      8cvNn8j4bjt7k49y4b666bL3hKEp+op5SzLQ3U6cPPB9by7v+PQW7mcVquuXyNq2nFUpl6kE
      KDtG7Lw4euyYRU+xIQCa1AHOkrFP97i6MTMxkenuNZN3aPEUbbvICOwiIzCsims5CfxL2nQ5
      fHIoRhm1gYu6Q2c/ViVFMbJGeOOItEMvJkQm4T1qNTPeT+aKGihJYLnyFaPxsD3ShA7wkAcq
      4WO3sYxyry9pR54bGspzJr7VVFzhzD8PsDszk/zCG9UdaZxo84wHvX2DeH/6GJ6zRS+66ho5
      SfEk7MjhQul91ICktQs9hgbyVkgQQ80mUsW1nCS2Je0j89+FVPf3XXi6Uw9GePszcfIgOrWw
      4lGc2kGirvRLPAnfWLvw10Q6YD5fzCtiYuxJ1MDFxCROyD9kgMEp0TIZ2u6iH5/mxTDM6JWy
      iZZ9oP1dt3BSlMHUdaMq7hRks+/QfrK+v8CVn0vRNeSS1i649XiZSSFhBPQ11Sk3loaRe+jU
      hi4vyVm4SE5fQ9uLE5EHKKorB4GLigBkitpp+T2mgYGLORwvDcbNpYHn/xDLiFkpGA99Kym/
      mU/m5nwylduJSIxDXq+zmUZ1Yi2hc+vG2er7peSnK4hI/4ZBkRtZG+Be92ZqilCGBrP2bN2c
      qu+XcjO/FGV+JkqFJxGpiciftSxPpzL2oatLpP6zLLLPxf9dXt96km23ANVBss5+yAAvy9Kz
      nBskz/gLq88aD13V90spPLGT1Sf2ss1/Jd9EDcN8A/8b5acTWRu1iSO3a12zspzCTAUh/y7i
      029jGNbASKEJO8Ge9O6v+3yG1W+GE5dzhYqG9Mn++6uJwl+LyrOsnRfH+Qb2+zRFiYS/X18n
      s4xjse+yLFtV6/8azsfNM1r4jaSExuI8FnE2T1/88RkzwLJazKE3Y8a3Fw5U5J0tsjRBK9Dw
      66+W9NvU3E5dSEx67XtWi4sbCAlR1C38hpSl8VHcKatyaUgTtgDOjJ/qz5cnU7Udt7JjxEdM
      Jt6pDb1feo3xr49mfO8uSC0MWSStn6fvmAn4jH2ZQV070lbfkb7Fj4c3E7MiVYh5U0g7O4ue
      Vtd2l9gyT8E54d479fkrKyKn81IXKY5oqLh1hm9XLEZxrAwoI+2zbUwZbNi5PEtaSone9pEL
      PmH2+OoOf5XqLndKznB4z0527fuPFfm6TvFPus+D8Opj+Zk9X+gHQqDzU/F1wN2KdC3FiTa9
      X+K18ZMYMrgn7q5PoY3uqlAV/kDSur8Tf6wMUJO19xBlvgE413O9DgN8mBQUyKtez/NUCwc0
      FVfY91EYMRnaPqXqTAHFeGnDMbdglHnB2lOb2zxAy8GRbIy8w7uxx6pHLyrLq8eqJa15vu+r
      hM4PZUSnFqYzN3AxWd87Gp0kc2jRnl4Toviiohi/1WcAFWcKisHLuk6f5sROkoXyK/EMJzEu
      mOpIw4EW7WUEK76i1bsTiT2phpIU9vwrlJ76wNqgz9N5CmGBvehgcH1HaVs69BpNcK/RBM+r
      oMLStvjGNa7qPrd/BldrnmAHNzoDPwEUXqGYYUZi+MbwLEEJ3xPsaCxTjki7DCV07TLujZ3J
      P1TAyXzOEWCivwG0n8SaLfMZ3q7mk3Zo0YkJ0e+TmbGErEbmuImXQjjgHqBg765Y5AM64FT7
      a/V9rp5QEjl5FBPnJHOpysRlHI0XfkNc+g+ms/BZ9eCh1Tk9m3VQiLOl+M+SYzzMdsH/LX8h
      jlVx9OQlg+/a0k4XcfwUz+x31rIjr5C7KiNGObbA4j6wRoM+WpK2oqWFpwHw5z8/4hrPAUej
      hd/wJ/0YMEh38ACzj0bagU7tTDzplq1o1YAc1smODa5hNY7PjSFiwxjChZGc7ft38kN+uUFc
      r+b2kdUEy2/yxdYIvIw+ZWG0Yc9O9h0vptRgtKE2t+7ctTKHN/ixQFd9D2JAP9O3ycGzN335
      B1l10unKiPEdSUgo0drzLyWrwpSsAu2Sjx5DCXzjDSYM745Vk7OtWlV3HFUPsMq1f/uNppgG
      0+ifazqXrt8zGKGrzW1+vgvWebFteazTIQ4tOiELDEMWGAZVdyjI3seOLZtJF3qd6itKFm0Y
      Rtp8r5oZVeUTFzGLeIs6mA3BsFN6gAUDD1h2Wo2wwoGeoetZeiOEZQdvU8M31fcpzU9HkZ+O
      wskD+cr1hA+2cK2O89O0032+dZPbGiye1NJc/Ql996FLJxuHP6CdnV5CyLKDmOu3Nieaz2pQ
      x3b0Gh3M0qTDfDPTE4nw77J9GZyt8cNilOGhQuGX4DokhI+37iYjN4+8PIO/lHAe+xIih/b4
      rvgnWbs2seDt4fR2aa23S0/lZZSzg1h7ytK62Q13vWHHOHXW3G9rculCvv5zZ7cOZn7ZMB7m
      xjJtiVD4nTwIWLCJ7YeyOZ5X89l86mfzpBtMM5wQd6Trm7Pw/1roKKkK+PEGeOnGyE/tYIsw
      NNNtppLE6UbG323KOFYdX87IRiTi+JyMwDAZgWFAlYq7JZfI+G47u5SZwhBrGcnfHGSml68F
      0YAbvV6UwkUVoGLfoRNEeFkwFKo5wZ6UW8KBFFkfW48AlbF/mzDCJx3Hqt3LGfkEzOI3nxbA
      EIdWtDZREooLzgid086MGv6oCr8bHt11dfUxsnKt70SbxFGqXe4RtoaktFWM0xWS2z9jaU/F
      a6SPvh+g+sc6vrJggVtx8npSdd2ajlPwt/kk2DnyTwofB41q8MRUU9N0DlCsZM6cOHKumRra
      qUaVncwefWXVi+5GZ0hL+PGyiYKpKef04ePcMv6tRfTxGqzLDWnLV1FnnstImtduGeTnRi47
      c65h1lqpK8/oHF3zG79ZmjmvNwl9UXdwkQ3vLiOj3LQTqE6sZt4X54R+iIT+8ol0Nflr05Ny
      mvIyfrEkfxcuY2qareraIQ7nm/jyEVJ07kejAwZN2AJo+PlIPBGTvBkxdR6bdhyl4Po9g5ng
      KlTXC/gubg5vLEzTzxN0nOKPYWXVqpWualGT8emHJObdEQqZcH7iEoJGjCVkw0nqK7PmaOnt
      j58uqbI0PvALInZvAdcNhjE1Ffe4XvAdiStmMnHEWD48aFCHay6TEjEJ7xFTmbdpB3mFd6k+
      VZvXvcui+VrwUonbs1i+MsSFgEXheOo7Smks8J/KkuQ8g/wJacQG4TdTWAgHSDzDmO9fNyX9
      bSWDjWtzuCNcpkp1l8KcRFbMnMiIscs5ajJPLauvUbKVxcsOcUV4uJqKexTm7WDtO6/gPSmS
      tGsWG9o42rZDNxKtzvg7s+PyuKUrcJoK7l2/8zj6AGruX8hk84VMNtfzS4lnOGtm1KyrnIeM
      pr/kJCfVQNkxFGG+1FnjBEicnXEqK2u4E7QcxtyP/Dj+geCMlZdJiZlGiplTjHW61fcvkLn5
      ApmbV5k505nXpoyyajTQwV3Ox1HnmKZbEl15mfTVYaSvNpeMHysVwUbnNHrLJCRnqAE1V5Ij
      8E22IjMA9GGkjzPJydpZ3iupkUxONZoJnJ3LKCsz9p2N6TmGVzomEF8CUMnZ+DAmxBv+wK8J
      W4C2/XnN16Pu5JdRJLgOCSfO2MNy8Wf+e31MX0fiypDweNI2vqH3/oYiHRbF1qVjca0zdGME
      pw50fdZgaqZtLwb2MDLqUwdnBkVuJMLL2rrIgfa+K0j6XI6HRTe1B+9vNr1obNys96pbFCM4
      efgyP34x48zkxyt0Mf5mbpaTRwCxu/ayeKAl+bUFXZmxJtysXU3XArTsScDSJPw/vMWPuQc5
      tD+L7y9c4WdheTFIaO3iRo+XfQgKmswgk0shHHCXx5HaM4XPFFv4XphAc2rThRd85MwO9qF7
      GwcotkWgqS1ku4eHcOzbBBJSThks75XQ2uVpOvXwZfzr43jlxU41Z3NbehG+7XtC7xSQvW8P
      O/cdp/CG4fu6XXhhuA9BU+tbTm0+f20GR5B0WE7BgZ1srfFOsPZ+dpLeI/9yGXCBdW9H42Zq
      5aSbnC0726NYtoE9p69yX61bvjwa+Uw543q1w5FszpvLjnQYUTt3MHB9LHF7TnNVexHtpN9b
      IQQNfQ5HoCm3IHBwD2ZLWm9SPlPwVc4FSoXZUu370n35k6gT/AdHU0TiDDkK3ao+Z79GLR/+
      o9E8h0FFbIeDO8GKlfjpllyWpbHwjWX1j2rZCaID2APSYURtrI6F1bdTRScQEEMgEbtGbAFE
      7BrRAUTsGtEBROwa0QFE7BrRAUTsGtEBROwa0QFE7BrRAUTsGtEBROwa0QFE7BrRAUTsGtEB
      ROwa0QFE7BrRAUTsGtEBROyaZrgznCGGG+AWcuOmbgNdnQzSJN4OFN4BtjnFKINfZ+25mptc
      +n2aR4yJ/bw1FQbvO1+6zr2b1Rv+OrV5hme7DMQnKIjJgzpZvhu0QNW1Q3yyYCkplytN7nXf
      IM6vZ8KbCRbtoWQqXZvardc83supC8L715LWuLj1YLR8NsE+Vm4mXA/N9IUYDeWnlayI2Uzm
      9Xo2wJW4MjYqnqW+7W3qzar0uYxbkkXtPV6NO0AZ38XMIGbvdYuUaySuQ5j3+RoCLJA20lRc
      4ft1i1iqU3rEdEFsCJqMxQxcYNnmv3XTta3dqvxEFs9XcMzMlikS17FExS/Ft31jn7Z2I99m
      GQKdVUzEL0RRf+EHUN/m4JJpxNpy+0JVBivX1C38pnnAjUuWFQIA9e0jxMoXYlYhSFPO6cQ5
      TBw1mUiDwm9rSq4WNuJs29mtKUokPNR84dde4yBLpjX+dU5V9jKmLTnYPEOg/9w12E7cyQPf
      t2cQOMpLL7ejqbjH1aObiFqaot9cNnXN10zZGWpmyz9LeUjuupUcUAFI8IzYzoxLAQhKO+YR
      FG4C5WMY3K0j7dpKBSEPI5q96izWxJ3Cd37tTTq1rd9SY8Jwj4Drgt7SlLg86mTFUhprt+Y8
      cQZyVJJOY5izcBY+vTsgdYQq1XXy961n5WeHtDvclaWxMOYlDnziW4/IngkeZvPJR9oNz5ql
      AwDaDa7ClrFE3rdOzOfQ4im6jIlkW2cXggMFvdySM/y7DLqaF5yqF82pDcSkaqshied7LJW7
      URxd31mt6CVfy67RQ03Isuo0e7fRzz2cv6zWypXW0LbSk8u6EAVHdIcSV/oFvs/UlluJ+LK2
      +GdjKeaK0AC4P9+Q821jtyY3ma91cmrdZqJMnF5jQzRHaQdkU2JJ6t+dGXKto6izNpN0yZfQ
      BtR4pf/8ijShBWmGIZAGh64hxKft5rPguoXfEAf3UYzV70eo4sGDxiZ9nrjlydqtBiWevLdU
      bqGIhDNevqYKgSEOPDtwoIXSdE54BETzddpuvowYQ8f/tegkKymmSPCp5xtUcdjG7rM/5Og3
      R/MLfdOEHJV2k6vF0zoKRyUkpzZEHbKY/XvOCJ8lzdEBHBgsD60pfmwSAyE6pLRqlGiUhqKv
      lpNQAiDB872lyB+BmLrqXL5+52RJl07U3fjagbZDwtmUfpikyAmPaIRLwEBw7/lHlwpg3u6H
      +ofojrubeXu7TpyCbmNsVfZx8zvVGaMsj+N6kfGxzdEBLEVD+d4t+t2VeXE4QxoT/hQnExOv
      vTO60Me2aCg/vZ7wZULnWuLJe9OHGYlBBxP+WTAyU+JwtqS4CJ2sXyMjRzNYajdAEUXF9Wgd
      uPRnsE798FYRV60d+7h4Hl39z4u9m3EfwCxVXEqeS/jqY0LT6Yz/9Fes2F68NqWkfPyFthMm
      8SQseopN9LM0Fff4pfwGF3OPsGtvMkcvCPugSlzxX6l4JC2MNZTduqkfbJDJZNVfSFrj8nQn
      eozwZrzPBIZ3t1C/TMBauzt39YS0c4Cag1uUBA82voO1FhdcOyBovVovsvfwl1/0Nkvdn3/y
      HEBTfhpl9IeCQDWABM/wjUQObrjUoCrjc9afVGuvFRaN3ILxeVMUJ8oJUJjqrEpw7RfIBzHh
      jGz0OHbjuVpkIp/q+5TezKdUmU+mUoGTh5yV68MZbCYca4zdz45+lf5fnOOkGtTnFARPvcmC
      xVPx7tpBEE7XUHHvF27+dIyjOVnsP2G1qXru/nxb/7l9u7ZPkgNUcW3vR7y7wkCB0BaTYA9z
      WbfyACq04hHR8kclu/Q8YxdFMucVL5oiurEEj5eG4pxcLUZiisrLSmYH/dLATXUtsNvFn/lh
      e5ArtCo2lZdTiJlmTolBnzN+/a+1+anJE9EH0JSfJm7GKCbFVBd+SSd/YnfsZEWjZoA1nNoQ
      Q2oZQuhjShDbFlzl4IpQfL1HMHVJMqfNSBo1FdJhMRyopeCYl5dHbsZ+tm9agLyfa7W+QVka
      H32SbZ0uMWCZ3Q64BytYJ7dEP0KCRJ8pJ/6vkaNjzdwBNJTnribIL8RAE9iZQeHxpCVFMabB
      ++oLVz8fx/LkMmwR+uhwC1ZWF6bj2Rzav5/tm6IJf20AHZwA9X0upK8mxD8UpQXido8DR2lb
      usgCifhyN8rwaslaVVoqWSY8oPF2SxkQkcThXWsJ9+3NM22qXUHS2oUuA8bz9oJNfJudSEjH
      6nOsHflr+7Sr/nNRyY3muhYItGs1FlVLAKFVGFmyam6jC76WYhLlAZgMWy3A3MI4o2jKOR0X
      wcwEQbCu41t8tWOWRULXhjG2TRfD1ct51k94k4RbAN0IT1FiddKNsLsOD9OZ672ELADpFOIy
      5mPVBHbuMgbNTtXmo39k820BtGs1dIXfiT4h8aRui7RR4QfDSaAmw6ENfWetYo5uILskhTQr
      hK4fDwbidw2NuW1o98MjmeTqDvp60t3aC3TrqZ9H4Ex+M3WAh7msW67rnDnjtyqVuFDzs8JP
      Di60188CqXhgwzV8jwbDycbGxNw2sFtznq1xGfpZ45Fjva0SFgTA+QVe1IVQ6ma6GO7S12sQ
      luPgPGUFUSOtG4e2jGHE5OURY8Evs6Nl+sVwxsKeG98pOd95EiNM6poZoMrgQI7uQEqrho/e
      No5iJXPWPiBg7ltmNMo0FCWurJ5slL5IL4Pwx5Z2a6qqwNHR9HU05WQsixBm6gGpP38Z1ZCb
      15UR4zoSH18CqJtjC1DMsWydle151c+rUYX/UtxryGQy7V/0o5Fn09xIJ3LyMEaMnc68TTs4
      WnCduypDiewqVHcLydsRS5DfAmGlKSAdi3efR5IloD7ba+o2F95VVYt6ayq4V5hD3JyJ+qFJ
      kOA5I7BGvG1Lu28khTBm6jw27cij8K6BfnSViusFe4md6s+CtOq5H+95MxlgrGBkR1fbLJNh
      7JF3/escvQZ082sBDNdqcIuEN2UkWHhq3dr5FKnJJfojicOjNbeyPJ/Mzflk1ieADIAzfh/V
      foiWdcwvKgKQ1RZH7hZOijLYYAbbUtu1us2vj880m6bEM4zoKcZ7v423G0BTrR9tTlIZCa7+
      K4n2bYTKn4EGdPNrAR48aJTCuyGaE4fYp7uYxJuo9wfb6Mo1adWlj4VavQJOHsg/TyLqEUo1
      1mu7WxAfx8rpV68IsgTXIZEot9RdntD0djvRJySOb6KGNew9AAN0GtDNrwW4e8ei91PrR0Nu
      WqrgTFLGLY+mMZWGOZxfXkBSzhzt+8uHMvnhh3yKS3/Wa9JWawqPwNt/YoPeCbYOS2x35Lkx
      EXw5ZhZ3CrKZvWiVwTvXlmk229Jut+AE0r2a8v1vrQZ0M54HaCQPD7Bg9GIy1CAdt4rdy0c2
      utZ4YrBn262k+YVANuLhkcPkqAHpOP620L4KgD3bbi1/UAcoY//uDNRIGfe3hYy0qxJgz7Zb
      zx/TAUq/Y99JkI77GwvtrQTYs+0N4I/bBxARsYA/ZgsgImIh/w+erjsbO5vJnQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales quantity by market' width='192'>
      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
      P3oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='Year' width='192'>
      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
      HRKJJvwP5NTpObyZD3UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='customer table' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pie chart' width='192'>
      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
      htAr2oq9JhwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='78' name='profit' width='104'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='profit trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 5 customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 5 products' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
